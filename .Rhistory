functions_path = "./iris_network_analysis_functions.R",
figure_output_path = "../../data/out/figures/"
)
)
}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(ggraph)
requireNamespace("igraph")
requireNamespace("oaqc")
requireNamespace("concaveman")
# This source call reads in the `iris_network_analysis_functions.R` contents.
# The path is passed as a param to allow the compilation of the document
# both inside the Docker and locally.
source(params$functions_path)
fig_prefix("/some/path/to/edgelist_2021-2023.csv")
fig_prefix <- ("/some/path/to/edgelist_2021-2023.csv")
fig_prefix <- str_split_1(params$edgelist_path, "/")
fig_prefix <- fig_prefix[length(fig_prefix)]
fig_prefix <- str_split_1(fig_prefix, "/")
fig_prefix <- fig_prefix[length(fig_prefix)]
str_split_i(fig_prefix, "_", 2) |> str_split_i(".", 1)
str_split_i(fig_prefix, "_", 2)
str_split_i(fig_prefix, "_", 2) |> str_split_i(".")
str_split_i(fig_prefix, "_", 2) |> str_split_i(".", 1)
str_split_i(fig_prefix, "_", 2) |> str_split_i(".", 0)
str_split_i(fig_prefix, "_", 2) |> str_split_i(".", 2)
str_split_i(fig_prefix, "_", 2) |> str_split(".")
str_split_i(fig_prefix, "_", 2) |> str_split("\.")
str_split_i(fig_prefix, "_", 2) |> str_split("/.")
str_split_i(fig_prefix, "_", 2) |> str_split_i("/.", 1)
str_split_i(fig_prefix, "_", 2) |> str_split_i("\\.", 1)
for (i in years) {
cat(paste0("Processing year(s): ", i, "\n"))
rmarkdown::render(
input = "./src/network_analysis/iris_network_analysis_markdown.Rmd",  # 1. Search for your base report
output_format = "html_document",         # 2. Establish the format
output_file = paste0(i ,"_report.html"), # 3. Define the output file name
output_dir = "./data/out/",              # 4. Define an output folder/directory
params = list(
# path relative to .Rmd file # 5. Integrate your parameters
edgelist_path = paste0("../../data/networks/edgelist_", i ,".csv"),
authors_path = paste0("../../data/networks/authors_", i ,".csv"),
functions_path = "./iris_network_analysis_functions.R",
figure_output_path = "../../data/out/figures/"
)
)
}
get_basic_statistics(graph, "General") |> cat()
igraph::communities(graph)
igraph::communities(graph)
igraph::communities(bio_graph)
igraph::components(bio_graph)$csize |> table()
igraph::components(bio_graph)$csize |> table() |> str()
igraph::components(bio_graph)$csize |> table() |> deparse()
get_basic_statistics <- function(graph, name = "") {
assortativity <- igraph::assortativity.degree(graph, directed = FALSE)
num.nodes <- igraph::vcount(graph)
num.edges <- igraph::ecount(graph)
components <- igraph::components(graph)
comp_table_str <- capture.output(
print(table(components$csize))
)
paste0(
ifelse(name != "", paste0("Graph ", name, "\n"), ""),
"A graph with |V|: ", num.nodes, " and |E|: ", num.edges, ".\n",
"Assortativity: ", assortativity, "\n",
"Number of components: ", components$no,
"Component size distribution: \n", comp_table_str
)
}
get_basic_statistics(graph)
get_basic_statistics <- function(graph, name = "") {
assortativity <- igraph::assortativity.degree(graph, directed = FALSE)
num.nodes <- igraph::vcount(graph)
num.edges <- igraph::ecount(graph)
components <- igraph::components(graph)
comp_table_str <- capture.output(
print(table(components$csize))
)
print(comp_table_str)
paste0(
ifelse(name != "", paste0("Graph ", name, "\n"), ""),
"A graph with |V|: ", num.nodes, " and |E|: ", num.edges, ".\n",
"Assortativity: ", assortativity, "\n",
"Number of components: ", components$no,
"Component size distribution: \n", comp_table_str
)
}
get_basic_statistics(graph)
get_basic_statistics <- function(graph, name = "") {
assortativity <- igraph::assortativity.degree(graph, directed = FALSE)
num.nodes <- igraph::vcount(graph)
num.edges <- igraph::ecount(graph)
components <- igraph::components(graph)
comp_table_str <- paste0(capture.output(
print(table(components$csize))
), collapse = "\n")
print(comp_table_str)
paste0(
ifelse(name != "", paste0("Graph ", name, "\n"), ""),
"A graph with |V|: ", num.nodes, " and |E|: ", num.edges, ".\n",
"Assortativity: ", assortativity, "\n",
"Number of components: ", components$no,
"Component size distribution: \n", comp_table_str
)
}
get_basic_statistics(graph)
get_basic_statistics(graph) |> cat
get_basic_statistics(graph) |> cat()
get_basic_statistics <- function(graph, name = "") {
assortativity <- igraph::assortativity.degree(graph, directed = FALSE)
num.nodes <- igraph::vcount(graph)
num.edges <- igraph::ecount(graph)
components <- igraph::components(graph)
comp_table_str <- paste0(capture.output(
print(table(components$csize))
), collapse = "\n")
paste0(
ifelse(name != "", paste0("Graph ", name, "\n"), ""),
"A graph with |V|: ", num.nodes, " and |E|: ", num.edges, ".\n",
"Assortativity: ", assortativity, "\n",
"Number of components: ", components$no,
"Component size distribution: \n", comp_table_str, "\n"
)
}
get_basic_statistics(graph) |> cat()
get_basic_statistics <- function(graph, name = "") {
assortativity <- igraph::assortativity.degree(graph, directed = FALSE)
num.nodes <- igraph::vcount(graph)
num.edges <- igraph::ecount(graph)
components <- igraph::components(graph)
comp_table_str <- paste0(capture.output(
print(table(components$csize))
), collapse = "\n")
paste0(
ifelse(name != "", paste0("Graph ", name, "\n"), ""),
"A graph with |V|: ", num.nodes, " and |E|: ", num.edges, ".\n",
"Assortativity: ", assortativity, "\n",
"Number of components: ", components$no, "\n",
"Component size distribution: \n", comp_table_str, "\n"
)
}
get_basic_statistics(graph) |> cat()
for (i in years) {
cat(paste0("Processing year(s): ", i, "\n"))
rmarkdown::render(
input = "./src/network_analysis/iris_network_analysis_markdown.Rmd",  # 1. Search for your base report
output_format = "html_document",         # 2. Establish the format
output_file = paste0(i ,"_report.html"), # 3. Define the output file name
output_dir = "./data/out/",              # 4. Define an output folder/directory
params = list(
# path relative to .Rmd file # 5. Integrate your parameters
edgelist_path = paste0("../../data/networks/edgelist_", i ,".csv"),
authors_path = paste0("../../data/networks/authors_", i ,".csv"),
functions_path = "./iris_network_analysis_functions.R",
figure_output_path = "../../data/out/figures/"
)
)
}
for (i in years) {
cat(paste0("Processing year(s): ", i, "\n"))
rmarkdown::render(
input = "./src/network_analysis/iris_network_analysis_markdown.Rmd",  # 1. Search for your base report
output_format = "html_document",         # 2. Establish the format
output_file = paste0(i ,"_report.html"), # 3. Define the output file name
output_dir = "./data/out/",              # 4. Define an output folder/directory
params = list(
# path relative to .Rmd file # 5. Integrate your parameters
edgelist_path = paste0("../../data/networks/edgelist_", i ,".csv"),
authors_path = paste0("../../data/networks/authors_", i ,".csv"),
functions_path = "./iris_network_analysis_functions.R",
figure_output_path = "../../data/out/figures/"
)
)
}
for (i in years) {
cat(paste0("Processing year(s): ", i, "\n"))
rmarkdown::render(
input = "./src/network_analysis/iris_network_analysis_markdown.Rmd",  # 1. Search for your base report
output_format = "html_document",         # 2. Establish the format
output_file = paste0(i ,"_report.html"), # 3. Define the output file name
output_dir = "./data/out/",              # 4. Define an output folder/directory
params = list(
# path relative to .Rmd file # 5. Integrate your parameters
edgelist_path = paste0("../../data/networks/edgelist_", i ,".csv"),
authors_path = paste0("../../data/networks/authors_", i ,".csv"),
functions_path = "./iris_network_analysis_functions.R",
figure_output_path = "../../data/out/figures/"
)
)
}
for (i in years) {
cat(paste0("Processing year(s): ", i, "\n"))
rmarkdown::render(
input = "./src/network_analysis/iris_network_analysis_markdown.Rmd",  # 1. Search for your base report
output_format = "html_document",         # 2. Establish the format
output_file = paste0(i ,"_report.html"), # 3. Define the output file name
output_dir = "./data/out/",              # 4. Define an output folder/directory
params = list(
# path relative to .Rmd file # 5. Integrate your parameters
edgelist_path = paste0("../../data/networks/edgelist_", i ,".csv"),
authors_path = paste0("../../data/networks/authors_", i ,".csv"),
functions_path = "./iris_network_analysis_functions.R",
figure_output_path = "../../data/out/figures/"
)
)
}
for (i in years) {
cat(paste0("Processing year(s): ", i, "\n"))
rmarkdown::render(
input = "./src/network_analysis/iris_network_analysis_markdown.Rmd",  # 1. Search for your base report
output_format = "html_document",         # 2. Establish the format
output_file = paste0(i ,"_report.html"), # 3. Define the output file name
output_dir = "./data/out/",              # 4. Define an output folder/directory
params = list(
# path relative to .Rmd file # 5. Integrate your parameters
edgelist_path = paste0("../../data/networks/edgelist_", i ,".csv"),
authors_path = paste0("../../data/networks/authors_", i ,".csv"),
functions_path = "./iris_network_analysis_functions.R",
figure_output_path = "../../data/out/figures/"
)
)
}
for (i in years) {
cat(paste0("Processing year(s): ", i, "\n"))
rmarkdown::render(
input = "./src/network_analysis/iris_network_analysis_markdown.Rmd",  # 1. Search for your base report
output_format = "html_document",         # 2. Establish the format
output_file = paste0(i ,"_report.html"), # 3. Define the output file name
output_dir = "./data/out/",              # 4. Define an output folder/directory
params = list(
# path relative to .Rmd file # 5. Integrate your parameters
edgelist_path = paste0("../../data/networks/edgelist_", i ,".csv"),
authors_path = paste0("../../data/networks/authors_", i ,".csv"),
functions_path = "./iris_network_analysis_functions.R",
figure_output_path = "../../data/out/figures/"
)
)
}
for (i in years) {
cat(paste0("Processing year(s): ", i, "\n"))
rmarkdown::render(
input = "./src/network_analysis/iris_network_analysis_markdown.Rmd",  # 1. Search for your base report
output_format = "html_document",         # 2. Establish the format
output_file = paste0(i ,"_report.html"), # 3. Define the output file name
output_dir = "./data/out/",              # 4. Define an output folder/directory
params = list(
# path relative to .Rmd file # 5. Integrate your parameters
edgelist_path = paste0("../../data/networks/edgelist_", i ,".csv"),
authors_path = paste0("../../data/networks/authors_", i ,".csv"),
functions_path = "./iris_network_analysis_functions.R",
figure_output_path = "../../data/out/figures/"
)
)
}
??seq_along
seq_along(c(10, 20, 30, 22))
for (i in years) {
cat(paste0("Processing year(s): ", i, "\n"))
rmarkdown::render(
input = "./src/network_analysis/iris_network_analysis_markdown.Rmd",  # 1. Search for your base report
output_format = "html_document",         # 2. Establish the format
output_file = paste0(i ,"_report.html"), # 3. Define the output file name
output_dir = "./data/out/",              # 4. Define an output folder/directory
params = list(
# path relative to .Rmd file # 5. Integrate your parameters
edgelist_path = paste0("../../data/networks/edgelist_", i ,".csv"),
authors_path = paste0("../../data/networks/authors_", i ,".csv"),
functions_path = "./iris_network_analysis_functions.R",
figure_output_path = "../../data/out/figures/"
)
)
}
for (i in years) {
cat(paste0("Processing year(s): ", i, "\n"))
rmarkdown::render(
input = "./src/network_analysis/iris_network_analysis_markdown.Rmd",  # 1. Search for your base report
output_format = "html_document",         # 2. Establish the format
output_file = paste0(i ,"_report.html"), # 3. Define the output file name
output_dir = "./data/out/",              # 4. Define an output folder/directory
params = list(
# path relative to .Rmd file # 5. Integrate your parameters
edgelist_path = paste0("../../data/networks/edgelist_", i ,".csv"),
authors_path = paste0("../../data/networks/authors_", i ,".csv"),
functions_path = "./iris_network_analysis_functions.R",
figure_output_path = "../../data/out/figures/"
)
)
}
igraph::modularity(bio_graph)
igraph::modularity(bio_graph, bio_graph$community)
igraph::modularity(bio_graph, igraph::vertex.attributes(bio_graph)$community)
for (i in years) {
cat(paste0("Processing year(s): ", i, "\n"))
rmarkdown::render(
input = "./src/network_analysis/iris_network_analysis_markdown.Rmd",  # 1. Search for your base report
output_format = "html_document",         # 2. Establish the format
output_file = paste0(i ,"_report.html"), # 3. Define the output file name
output_dir = "./data/out/",              # 4. Define an output folder/directory
params = list(
# path relative to .Rmd file # 5. Integrate your parameters
edgelist_path = paste0("../../data/networks/edgelist_", i ,".csv"),
authors_path = paste0("../../data/networks/authors_", i ,".csv"),
functions_path = "./iris_network_analysis_functions.R",
figure_output_path = "../../data/out/figures/"
)
)
}
for (i in years) {
cat(paste0("Processing year(s): ", i, "\n"))
rmarkdown::render(
input = "./src/network_analysis/iris_network_analysis_markdown.Rmd",  # 1. Search for your base report
output_format = "html_document",         # 2. Establish the format
output_file = paste0(i ,"_report.html"), # 3. Define the output file name
output_dir = "./data/out/",              # 4. Define an output folder/directory
params = list(
# path relative to .Rmd file # 5. Integrate your parameters
edgelist_path = paste0("../../data/networks/edgelist_", i ,".csv"),
authors_path = paste0("../../data/networks/authors_", i ,".csv"),
functions_path = "./iris_network_analysis_functions.R",
figure_output_path = "../../data/out/figures/"
)
)
}
for (i in years) {
cat(paste0("Processing year(s): ", i, "\n"))
rmarkdown::render(
input = "./src/network_analysis/iris_network_analysis_markdown.Rmd",  # 1. Search for your base report
output_format = "html_document",         # 2. Establish the format
output_file = paste0(i ,"_report.html"), # 3. Define the output file name
output_dir = "./data/out/",              # 4. Define an output folder/directory
params = list(
# path relative to .Rmd file # 5. Integrate your parameters
edgelist_path = paste0("../../data/networks/edgelist_", i ,".csv"),
authors_path = paste0("../../data/networks/authors_", i ,".csv"),
functions_path = "./iris_network_analysis_functions.R",
figure_output_path = "../../data/out/figures/"
)
)
}
# Loop to perform network analysis (src/network_analysis/iris_network_analysis_markdown.Rmd, same as iris_network_analysis.R)
#on all subsets of data (found in data/networks/) and produce a markdown report for each.
#Functions used in network analysis are in src/iris_network_analysis_functions.R
#Data is subset based on years ranges
years = unique(gsub("^.+?_(.+?)\\.csv$", "\\1", list.files("./data/networks/")))
for (i in years) {
cat(paste0("Processing year(s): ", i, "\n"))
rmarkdown::render(
input = "./src/network_analysis/iris_network_analysis_markdown.Rmd",  # 1. Search for your base report
output_format = "html_document",         # 2. Establish the format
output_file = paste0(i ,"_report.html"), # 3. Define the output file name
output_dir = "./data/out/",              # 4. Define an output folder/directory
params = list(
# path relative to .Rmd file # 5. Integrate your parameters
edgelist_path = paste0("../../data/networks/edgelist_", i ,".csv"),
authors_path = paste0("../../data/networks/authors_", i ,".csv"),
functions_path = "./iris_network_analysis_functions.R",
figure_output_path = "../../data/out/figures/"
)
)
}
# For ease of use, we list all the single departments that we want, and we
# save them later one by one.
# Colors are purely for decoration.
plots <- list(
"DBios" = inspect_one(
graph,
"scienze della vita e biologia dei sistemi",
"DBios",
walk = TRUE,
label_degree_treshold = 0
),
"biotech_mol" = inspect_one(
graph,
"biotecnologie molecolari e scienze per la salute",
"biotech", "green",
walk = TRUE,
label_degree_treshold = 0
),
"psicologia" = inspect_one(graph, "psicologia", NA, "blue", walk = TRUE),
"fisica" = inspect_one(graph, "fisica", NA, "orange", label_degree_treshold = 2, walk = TRUE),
"oncologia" = inspect_one(graph, "oncologia", NA, "purple", label_degree_treshold = 2, walk = TRUE),
"studi_umanistici" = inspect_one(
graph,
"studi umanistici",
NA, "yellow",
label_degree_treshold = 2,
walk = TRUE
),
"scienze_mediche" =inspect_one(
graph, "scienze mediche", NA, "yellow", label_degree_treshold = 2,
override_communities = 2, walk = TRUE
)
)
# For ease of use, we list all the single departments that we want, and we
# save them later one by one.
# Colors are purely for decoration.
plots <- list(
"DBios" = inspect_one(
graph,
"scienze della vita e biologia dei sistemi",
"DBios",
walk = TRUE,
label_degree_treshold = 0
),
"biotech_mol" = inspect_one(
graph,
"biotecnologie molecolari e scienze per la salute",
"biotech", "green",
walk = TRUE,
label_degree_treshold = 0
),
"psicologia" = inspect_one(graph, "psicologia", NA, "blue", walk = TRUE),
"fisica" = inspect_one(graph, "fisica", NA, "orange", label_degree_treshold = 2, walk = TRUE),
"oncologia" = inspect_one(graph, "oncologia", NA, "purple", label_degree_treshold = 2, walk = TRUE),
"scienze_mediche" =inspect_one(
graph, "scienze mediche", NA, "yellow", label_degree_treshold = 2,
override_communities = 2, walk = TRUE
)
)
for (i in years) {
cat(paste0("Processing year(s): ", i, "\n"))
rmarkdown::render(
input = "./src/network_analysis/iris_network_analysis_markdown.Rmd",  # 1. Search for your base report
output_format = "html_document",         # 2. Establish the format
output_file = paste0(i ,"_report.html"), # 3. Define the output file name
output_dir = "./data/out/",              # 4. Define an output folder/directory
params = list(
# path relative to .Rmd file # 5. Integrate your parameters
edgelist_path = paste0("../../data/networks/edgelist_", i ,".csv"),
authors_path = paste0("../../data/networks/authors_", i ,".csv"),
functions_path = "./iris_network_analysis_functions.R",
figure_output_path = "../../data/out/figures/"
)
)
}
for (i in years) {
cat(paste0("Processing year(s): ", i, "\n"))
rmarkdown::render(
input = "./src/network_analysis/iris_network_analysis_markdown.Rmd",  # 1. Search for your base report
output_format = "html_document",         # 2. Establish the format
output_file = paste0(i ,"_report.html"), # 3. Define the output file name
output_dir = "./data/out/",              # 4. Define an output folder/directory
params = list(
# path relative to .Rmd file # 5. Integrate your parameters
edgelist_path = paste0("../../data/networks/edgelist_", i ,".csv"),
authors_path = paste0("../../data/networks/authors_", i ,".csv"),
functions_path = "./iris_network_analysis_functions.R",
figure_output_path = "../../data/out/figures/"
)
)
}
# Loop to perform network analysis (src/network_analysis/iris_network_analysis_markdown.Rmd, same as iris_network_analysis.R)
#on all subsets of data (found in data/networks/) and produce a markdown report for each.
#Functions used in network analysis are in src/iris_network_analysis_functions.R
#Data is subset based on years ranges
years = unique(gsub("^.+?_(.+?)\\.csv$", "\\1", list.files("./data/networks/")))
for (i in years) {
cat(paste0("Processing year(s): ", i, "\n"))
rmarkdown::render(
input = "./src/network_analysis/iris_network_analysis_markdown.Rmd",  # 1. Search for your base report
output_format = "html_document",         # 2. Establish the format
output_file = paste0(i ,"_report.html"), # 3. Define the output file name
output_dir = "./data/out/",              # 4. Define an output folder/directory
params = list(
# path relative to .Rmd file # 5. Integrate your parameters
edgelist_path = paste0("../../data/networks/edgelist_", i ,".csv"),
authors_path = paste0("../../data/networks/authors_", i ,".csv"),
functions_path = "./iris_network_analysis_functions.R",
figure_output_path = "../../data/out/figures/"
)
)
}
# Loop to perform network analysis (src/network_analysis/iris_network_analysis_markdown.Rmd, same as iris_network_analysis.R)
#on all subsets of data (found in data/networks/) and produce a markdown report for each.
#Functions used in network analysis are in src/iris_network_analysis_functions.R
#Data is subset based on years ranges
years = unique(gsub("^.+?_(.+?)\\.csv$", "\\1", list.files("./data/networks/")))
for (i in years) {
cat(paste0("Processing year(s): ", i, "\n"))
rmarkdown::render(
input = "./src/network_analysis/iris_network_analysis_markdown.Rmd",  # 1. Search for your base report
output_format = "html_document",         # 2. Establish the format
output_file = paste0(i ,"_report.html"), # 3. Define the output file name
output_dir = "./data/out/",              # 4. Define an output folder/directory
params = list(
# path relative to .Rmd file # 5. Integrate your parameters
edgelist_path = paste0("../../data/networks/edgelist_", i ,".csv"),
authors_path = paste0("../../data/networks/authors_", i ,".csv"),
functions_path = "./iris_network_analysis_functions.R",
figure_output_path = "../../data/out/figures/"
)
)
}
setwd("~/Files/repos/turin-author-network")
for (i in years) {
cat(paste0("Processing year(s): ", i, "\n"))
rmarkdown::render(
input = "./src/network_analysis/iris_network_analysis_markdown.Rmd",  # 1. Search for your base report
output_format = "html_document",         # 2. Establish the format
output_file = paste0(i ,"_report.html"), # 3. Define the output file name
output_dir = "./data/out/",              # 4. Define an output folder/directory
params = list(
# path relative to .Rmd file # 5. Integrate your parameters
edgelist_path = paste0("../../data/networks/edgelist_", i ,".csv"),
authors_path = paste0("../../data/networks/authors_", i ,".csv"),
functions_path = "./iris_network_analysis_functions.R",
figure_output_path = "../../data/out/figures/"
)
)
}
